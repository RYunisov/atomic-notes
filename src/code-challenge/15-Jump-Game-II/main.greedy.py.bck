#!/bin/env python3

'''
LeetCode 45 Jump Game II
Greedy version
https://leetcode.com/problems/jump-game-ii/
'''

class Solution:
    def jump(self, nums):
        print(f'Given: {nums}')
        steps = 0
        n = len(nums) - 1
        maxum = 0

        for i in range(len(nums)):
            for j in range(1,nums[i]+1):

                print(f"i:{i} j:{j} nums[i]:{nums[i]} maxum:{maxum} steps:{steps}")

                if j + nums[i+1] > maxum and i < n:
                    maxum = j + nums[i+1]
                    steps += 1

                if i+1 >= n:
                    print(f"F1i:{i} j:{j} maxum:{maxum} steps:{steps}")
                    return steps

        return steps 

nums = [1,1,1,1,4]
#nums = [1,2,1,1,4]
#nums = [2,3,1,1,4]
#nums = [2,3,0,1,4]
#nums = [2,2,1,1,4]
#nums = [2,5,0,0,0]

s = Solution()
print(s.jump(nums))

